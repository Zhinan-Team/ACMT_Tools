# Generated by Django 5.0.7 on 2024-11-05 17:00

import django.db.models.deletion
import django.utils.timezone
import dvadmin.system.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acars',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('enable_report', models.CharField(blank=True, max_length=255, null=True)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('report_id', models.CharField(blank=True, max_length=255, null=True)),
                ('exceedance_report', models.CharField(blank=True, max_length=255, null=True)),
                ('exceedance_parameter', models.CharField(blank=True, max_length=255, null=True)),
                ('engine_location', models.CharField(blank=True, max_length=255, null=True)),
                ('trigger_id', models.CharField(blank=True, max_length=255, null=True)),
                ('header_task', models.CharField(blank=True, max_length=255, null=True)),
                ('record_task', models.CharField(blank=True, max_length=20000, null=True)),
                ('global_guid', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Acars数据',
                'verbose_name_plural': 'Acars数据',
                'db_table': 'dvadmin_acars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DerivedParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='参数名称')),
                ('calculation_frame_offset', models.CharField(blank=True, max_length=255, null=True, verbose_name='计算框架偏移')),
                ('calculation_rate', models.CharField(blank=True, max_length=255, null=True, verbose_name='计算率')),
                ('units', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('encoding', models.CharField(blank=True, max_length=255, null=True, verbose_name='编码')),
                ('max', models.CharField(blank=True, max_length=255, null=True, verbose_name='最大值')),
                ('min', models.CharField(blank=True, max_length=255, null=True, verbose_name='最小值')),
                ('number_of_bits', models.IntegerField(blank=True, null=True, verbose_name='位数')),
                ('steady_state_filter', models.CharField(blank=True, max_length=255, null=True, verbose_name='稳态滤波器')),
                ('global_guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='全局GUID')),
                ('guid', models.CharField(blank=True, max_length=255, null=True, verbose_name='GUID')),
                ('condition', models.TextField(blank=True, null=True, verbose_name='条件')),
                ('value_scaling', models.CharField(blank=True, max_length=255, null=True, verbose_name='值缩放')),
                ('recording_data_group', models.CharField(blank=True, max_length=255, null=True, verbose_name='录制数据组')),
                ('display_values', models.CharField(blank=True, max_length=255, null=True, verbose_name='显示值')),
                ('translate_before', models.CharField(blank=True, max_length=255, null=True, verbose_name='翻译前')),
                ('translate_after', models.CharField(blank=True, max_length=255, null=True, verbose_name='翻译后')),
            ],
            options={
                'verbose_name': 'Parameter衍生数据',
                'verbose_name_plural': 'Parameter衍生数据',
                'db_table': 'dvadmin_derived_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('acquired', models.IntegerField(blank=True, null=True)),
                ('sample_frame', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_timeout', models.IntegerField(blank=True, null=True)),
                ('record_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('recording_data_group', models.CharField(blank=True, max_length=255, null=True)),
                ('global_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_factor', models.IntegerField(blank=True, null=True)),
                ('one_state', models.CharField(blank=True, max_length=255, null=True)),
                ('full_scale_rng_min', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('transmission_interval_minimum', models.IntegerField(blank=True, null=True)),
                ('zero_state', models.CharField(blank=True, max_length=255, null=True)),
                ('min', models.IntegerField(blank=True, null=True)),
                ('number_of_bits', models.IntegerField(blank=True, null=True)),
                ('max', models.IntegerField(blank=True, null=True)),
                ('encoding', models.CharField(blank=True, max_length=255, null=True)),
                ('lsb_res', models.IntegerField(blank=True, null=True)),
                ('word_in_message', models.IntegerField(blank=True, null=True)),
                ('full_scale_rng_max', models.IntegerField(blank=True, null=True)),
                ('units', models.CharField(blank=True, max_length=255, null=True)),
                ('coded_set', models.TextField(blank=True, null=True)),
                ('published_latency', models.IntegerField(blank=True, null=True)),
                ('ATA', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Parameter数据',
                'verbose_name_plural': 'Parameters数据',
                'db_table': 'dvadmin_acmt_bus_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParameterDistinct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('acquired', models.IntegerField(blank=True, null=True)),
                ('sample_frame', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_timeout', models.IntegerField(blank=True, null=True)),
                ('record_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('recording_data_group', models.CharField(blank=True, max_length=255, null=True)),
                ('global_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('scale_factor', models.IntegerField(blank=True, null=True)),
                ('one_state', models.CharField(blank=True, max_length=255, null=True)),
                ('full_scale_rng_min', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('transmission_interval_minimum', models.IntegerField(blank=True, null=True)),
                ('zero_state', models.CharField(blank=True, max_length=255, null=True)),
                ('min', models.IntegerField(blank=True, null=True)),
                ('number_of_bits', models.IntegerField(blank=True, null=True)),
                ('max', models.IntegerField(blank=True, null=True)),
                ('encoding', models.CharField(blank=True, max_length=255, null=True)),
                ('lsb_res', models.IntegerField(blank=True, null=True)),
                ('word_in_message', models.IntegerField(blank=True, null=True)),
                ('full_scale_rng_max', models.IntegerField(blank=True, null=True)),
                ('units', models.CharField(blank=True, max_length=255, null=True)),
                ('coded_set', models.TextField(blank=True, null=True)),
                ('published_latency', models.IntegerField(blank=True, null=True)),
                ('ATA', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Parameter数据唯一',
                'verbose_name_plural': 'Parameters数据唯一',
                'db_table': 'dvadmin_acmt_bus_parameter_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('details', models.CharField(blank=True, max_length=255, null=True)),
                ('base_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updater', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('LSAP_part_number', models.CharField(blank=True, max_length=255, null=True)),
                ('aircraft_model_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Project数据',
                'verbose_name_plural': 'Project数据',
                'db_table': 'dvadmin_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('group_info', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('rate', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('delay', models.IntegerField(blank=True, default=0, null=True)),
                ('trigger', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('init_state', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('state_filter', models.IntegerField(blank=True, default=0, null=True)),
                ('trigger_limit', models.IntegerField(blank=True, default=0, null=True)),
                ('log_limit', models.IntegerField(blank=True, default=0, null=True)),
                ('event_record', models.IntegerField(blank=True, default=0, null=True)),
                ('condition', models.TextField(blank=True, default='{}', null=True)),
                ('task_id', models.TextField(blank=True, default='', null=True)),
                ('guid', models.TextField(blank=True, default='', null=True)),
                ('aircraft_part', models.CharField(blank=True, default='', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Rule数据',
                'verbose_name_plural': 'Rule数据',
                'db_table': 'dvadmin_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RuletoTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rulename', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('taskname', models.CharField(blank=True, default='', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'RuleTask关系',
                'verbose_name_plural': 'RuleTask关系',
                'db_table': 'dvadmin_ruletotask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('task_type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('hmu_event_type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('execution_limit', models.IntegerField(blank=True, default=None, null=True)),
                ('record_rate', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('start_time', models.IntegerField(blank=True, default=None, null=True)),
                ('stop_time', models.IntegerField(blank=True, default=None, null=True)),
                ('parameter', models.TextField(blank=True, default=None, null=True)),
                ('fault', models.TextField(blank=True, default=None, null=True)),
                ('acars_report', models.TextField(blank=True, default=None, null=True)),
                ('guid', models.TextField(blank=True, default=None, null=True)),
                ('task_position', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Task数据',
                'verbose_name_plural': 'Task数据',
                'db_table': 'dvadmin_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('username', models.CharField(db_index=True, help_text='用户账号', max_length=150, unique=True, verbose_name='用户账号')),
                ('email', models.EmailField(blank=True, help_text='邮箱', max_length=255, null=True, verbose_name='邮箱')),
                ('mobile', models.CharField(blank=True, help_text='电话', max_length=255, null=True, verbose_name='电话')),
                ('avatar', models.CharField(blank=True, help_text='头像', max_length=255, null=True, verbose_name='头像')),
                ('name', models.CharField(help_text='姓名', max_length=40, verbose_name='姓名')),
                ('gender', models.IntegerField(blank=True, choices=[(0, '未知'), (1, '男'), (2, '女')], default=0, help_text='性别', null=True, verbose_name='性别')),
                ('user_type', models.IntegerField(blank=True, choices=[(0, '后台用户'), (1, '前台用户')], default=0, help_text='用户类型', null=True, verbose_name='用户类型')),
                ('login_error_count', models.IntegerField(default=0, help_text='登录错误次数', verbose_name='登录错误次数')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': 'dvadmin_system_users',
                'ordering': ('-create_datetime',),
            },
            managers=[
                ('objects', dvadmin.system.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('username', models.CharField(blank=True, help_text='登录用户名', max_length=32, null=True, verbose_name='登录用户名')),
                ('ip', models.CharField(blank=True, help_text='登录ip', max_length=32, null=True, verbose_name='登录ip')),
                ('agent', models.TextField(blank=True, help_text='agent信息', null=True, verbose_name='agent信息')),
                ('browser', models.CharField(blank=True, help_text='浏览器名', max_length=200, null=True, verbose_name='浏览器名')),
                ('os', models.CharField(blank=True, help_text='操作系统', max_length=200, null=True, verbose_name='操作系统')),
                ('continent', models.CharField(blank=True, help_text='州', max_length=50, null=True, verbose_name='州')),
                ('country', models.CharField(blank=True, help_text='国家', max_length=50, null=True, verbose_name='国家')),
                ('province', models.CharField(blank=True, help_text='省份', max_length=50, null=True, verbose_name='省份')),
                ('city', models.CharField(blank=True, help_text='城市', max_length=50, null=True, verbose_name='城市')),
                ('district', models.CharField(blank=True, help_text='县区', max_length=50, null=True, verbose_name='县区')),
                ('isp', models.CharField(blank=True, help_text='运营商', max_length=50, null=True, verbose_name='运营商')),
                ('area_code', models.CharField(blank=True, help_text='区域代码', max_length=50, null=True, verbose_name='区域代码')),
                ('country_english', models.CharField(blank=True, help_text='英文全称', max_length=50, null=True, verbose_name='英文全称')),
                ('country_code', models.CharField(blank=True, help_text='简称', max_length=50, null=True, verbose_name='简称')),
                ('longitude', models.CharField(blank=True, help_text='经度', max_length=50, null=True, verbose_name='经度')),
                ('latitude', models.CharField(blank=True, help_text='纬度', max_length=50, null=True, verbose_name='纬度')),
                ('login_type', models.IntegerField(choices=[(1, '普通登录'), (2, '微信扫码登录')], default=1, help_text='登录类型', verbose_name='登录类型')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '登录日志',
                'verbose_name_plural': '登录日志',
                'db_table': 'dvadmin_system_login_log',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('icon', models.CharField(blank=True, help_text='菜单图标', max_length=64, null=True, verbose_name='菜单图标')),
                ('name', models.CharField(help_text='菜单名称', max_length=64, verbose_name='菜单名称')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('is_link', models.BooleanField(default=False, help_text='是否外链', verbose_name='是否外链')),
                ('link_url', models.CharField(blank=True, help_text='链接地址', max_length=255, null=True, verbose_name='链接地址')),
                ('is_catalog', models.BooleanField(default=False, help_text='是否目录', verbose_name='是否目录')),
                ('web_path', models.CharField(blank=True, help_text='路由地址', max_length=128, null=True, verbose_name='路由地址')),
                ('component', models.CharField(blank=True, help_text='组件地址', max_length=128, null=True, verbose_name='组件地址')),
                ('component_name', models.CharField(blank=True, help_text='组件名称', max_length=50, null=True, verbose_name='组件名称')),
                ('status', models.BooleanField(blank=True, default=True, help_text='菜单状态', verbose_name='菜单状态')),
                ('cache', models.BooleanField(blank=True, default=False, help_text='是否页面缓存', verbose_name='是否页面缓存')),
                ('visible', models.BooleanField(blank=True, default=True, help_text='侧边栏中是否显示', verbose_name='侧边栏中是否显示')),
                ('is_iframe', models.BooleanField(blank=True, default=False, help_text='框架外显示', verbose_name='框架外显示')),
                ('is_affix', models.BooleanField(blank=True, default=False, help_text='是否固定', verbose_name='是否固定')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='上级菜单', null=True, on_delete=django.db.models.deletion.CASCADE, to='system.menu', verbose_name='上级菜单')),
            ],
            options={
                'verbose_name': '菜单表',
                'verbose_name_plural': '菜单表',
                'db_table': 'dvadmin_system_menu',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='MenuButton',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('name', models.CharField(help_text='名称', max_length=64, verbose_name='名称')),
                ('value', models.CharField(help_text='权限值', max_length=64, unique=True, verbose_name='权限值')),
                ('api', models.CharField(help_text='接口地址', max_length=200, verbose_name='接口地址')),
                ('method', models.IntegerField(blank=True, default=0, help_text='接口请求方法', null=True, verbose_name='接口请求方法')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('menu', models.ForeignKey(db_constraint=False, help_text='关联菜单', on_delete=django.db.models.deletion.CASCADE, related_name='menuPermission', to='system.menu', verbose_name='关联菜单')),
            ],
            options={
                'verbose_name': '菜单权限表',
                'verbose_name_plural': '菜单权限表',
                'db_table': 'dvadmin_system_menu_button',
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='MenuField',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('model', models.CharField(max_length=64, verbose_name='表名')),
                ('field_name', models.CharField(max_length=64, verbose_name='模型表字段名')),
                ('title', models.CharField(max_length=64, verbose_name='字段显示名')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('menu', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='system.menu', verbose_name='菜单')),
            ],
            options={
                'verbose_name': '菜单字段表',
                'verbose_name_plural': '菜单字段表',
                'db_table': 'dvadmin_system_menu_field',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('request_modular', models.CharField(blank=True, help_text='请求模块', max_length=64, null=True, verbose_name='请求模块')),
                ('request_path', models.CharField(blank=True, help_text='请求地址', max_length=400, null=True, verbose_name='请求地址')),
                ('request_body', models.TextField(blank=True, help_text='请求参数', null=True, verbose_name='请求参数')),
                ('request_method', models.CharField(blank=True, help_text='请求方式', max_length=8, null=True, verbose_name='请求方式')),
                ('request_msg', models.TextField(blank=True, help_text='操作说明', null=True, verbose_name='操作说明')),
                ('request_ip', models.CharField(blank=True, help_text='请求ip地址', max_length=32, null=True, verbose_name='请求ip地址')),
                ('request_browser', models.CharField(blank=True, help_text='请求浏览器', max_length=64, null=True, verbose_name='请求浏览器')),
                ('response_code', models.CharField(blank=True, help_text='响应状态码', max_length=32, null=True, verbose_name='响应状态码')),
                ('request_os', models.CharField(blank=True, help_text='操作系统', max_length=64, null=True, verbose_name='操作系统')),
                ('json_result', models.TextField(blank=True, help_text='返回信息', null=True, verbose_name='返回信息')),
                ('status', models.BooleanField(default=False, help_text='响应状态', verbose_name='响应状态')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '操作日志',
                'verbose_name_plural': '操作日志',
                'db_table': 'dvadmin_system_operation_log',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('name', models.CharField(help_text='角色名称', max_length=64, verbose_name='角色名称')),
                ('key', models.CharField(help_text='权限字符', max_length=64, unique=True, verbose_name='权限字符')),
                ('sort', models.IntegerField(default=1, help_text='角色顺序', verbose_name='角色顺序')),
                ('status', models.BooleanField(default=True, help_text='角色状态', verbose_name='角色状态')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
            ],
            options={
                'verbose_name': '角色表',
                'verbose_name_plural': '角色表',
                'db_table': 'dvadmin_system_role',
                'ordering': ('sort',),
            },
        ),
        migrations.CreateModel(
            name='FieldPermission',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('is_query', models.BooleanField(default=1, verbose_name='是否可查询')),
                ('is_create', models.BooleanField(default=1, verbose_name='是否可创建')),
                ('is_update', models.BooleanField(default=1, verbose_name='是否可更新')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('field', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='menu_field', to='system.menufield', verbose_name='字段')),
                ('role', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='system.role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '字段权限表',
                'verbose_name_plural': '字段权限表',
                'db_table': 'dvadmin_system_field_permission',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='users',
            name='role',
            field=models.ManyToManyField(blank=True, db_constraint=False, help_text='关联角色', to='system.role', verbose_name='关联角色'),
        ),
        migrations.CreateModel(
            name='RoleMenuButtonPermission',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('data_range', models.IntegerField(choices=[(0, '仅本人数据权限'), (1, '本部门及以下数据权限'), (2, '本部门数据权限'), (3, '全部数据权限'), (4, '自定数据权限')], default=0, help_text='数据权限范围', verbose_name='数据权限范围')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('menu_button', models.ForeignKey(blank=True, db_constraint=False, help_text='关联菜单按钮', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu_button_permission', to='system.menubutton', verbose_name='关联菜单按钮')),
                ('role', models.ForeignKey(db_constraint=False, help_text='关联角色', on_delete=django.db.models.deletion.CASCADE, related_name='role_menu_button', to='system.role', verbose_name='关联角色')),
            ],
            options={
                'verbose_name': '角色按钮权限表',
                'verbose_name_plural': '角色按钮权限表',
                'db_table': 'dvadmin_role_menu_button_permission',
                'ordering': ('-create_datetime',),
            },
        ),
        migrations.CreateModel(
            name='RoleMenuPermission',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('menu', models.ForeignKey(db_constraint=False, help_text='关联菜单', on_delete=django.db.models.deletion.CASCADE, related_name='role_menu', to='system.menu', verbose_name='关联菜单')),
                ('role', models.ForeignKey(db_constraint=False, help_text='关联角色', on_delete=django.db.models.deletion.CASCADE, related_name='role_menu', to='system.role', verbose_name='关联角色')),
            ],
            options={
                'verbose_name': '角色菜单权限表',
                'verbose_name_plural': '角色菜单权限表',
                'db_table': 'dvadmin_role_menu_permission',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('modifier', models.CharField(blank=True, help_text='修改人', max_length=255, null=True, verbose_name='修改人')),
                ('dept_belong_id', models.CharField(blank=True, help_text='数据归属部门', max_length=255, null=True, verbose_name='数据归属部门')),
                ('update_datetime', models.DateTimeField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('title', models.CharField(help_text='标题', max_length=50, verbose_name='标题')),
                ('key', models.CharField(db_index=True, help_text='键', max_length=100, verbose_name='键')),
                ('value', models.JSONField(blank=True, help_text='值', max_length=100, null=True, verbose_name='值')),
                ('sort', models.IntegerField(blank=True, default=0, help_text='排序', verbose_name='排序')),
                ('status', models.BooleanField(default=True, help_text='启用状态', verbose_name='启用状态')),
                ('data_options', models.JSONField(blank=True, help_text='数据options', null=True, verbose_name='数据options')),
                ('form_item_type', models.IntegerField(blank=True, choices=[(0, 'text'), (1, 'datetime'), (2, 'date'), (3, 'textarea'), (4, 'select'), (5, 'checkbox'), (6, 'radio'), (7, 'img'), (8, 'file'), (9, 'switch'), (10, 'number'), (11, 'array'), (12, 'imgs'), (13, 'foreignkey'), (14, 'manytomany'), (15, 'time')], default=0, help_text='表单类型', verbose_name='表单类型')),
                ('rule', models.JSONField(blank=True, help_text='校验规则', null=True, verbose_name='校验规则')),
                ('placeholder', models.CharField(blank=True, help_text='提示信息', max_length=50, null=True, verbose_name='提示信息')),
                ('setting', models.JSONField(blank=True, help_text='配置', null=True, verbose_name='配置')),
                ('creator', models.ForeignKey(db_constraint=False, help_text='创建人', null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, help_text='父级', null=True, on_delete=django.db.models.deletion.CASCADE, to='system.systemconfig', verbose_name='父级')),
            ],
            options={
                'verbose_name': '系统配置表',
                'verbose_name_plural': '系统配置表',
                'db_table': 'dvadmin_system_config',
                'ordering': ('sort',),
                'unique_together': {('key', 'parent_id')},
            },
        ),
    ]
